#!/bin/bash

# Detect the packager.
if [ -x /usr/local/bin/brew ]; then
  packager=homebrew
elif command -v port >/dev/null; then
  packager=macports
else
  packager=none
fi

# Get the command line options
opt_nocolor=f
opt_force_color=f
for arg in "$@"
do
  case "${arg}" in
    -m|--macports)
      packager=macports
      ;;
    -b|--nocolor)
      opt_nocolor=t
      ;;
    -c|--color)
      opt_nocolor=f
      opt_force_color=t
      ;;
    -h|--help)
      echo "Usage: $0 [options]"
      echo
      echo "  -m --macports Use MacPorts as package system (default packager: ${packager})."
      echo "  -b --nocolor  Turn color off."
      echo "  -c --color    Force the color on (overrides --nocolor)."
      exit 0
      ;;
    *)
      echo "Unknown argument: $1" 1>&2
      echo "For help, use: $0 --help" 1>&2
      exit 1
      ;;
  esac
done

# System Variables
user=$(whoami)
hostname=$(hostname | sed 's/.local//g')
ip=$(dig +short myip.opendns.com @resolver1.opendns.com)
distro="OS X $(sw_vers -productVersion)"
kernel=$(uname)
uptime=$(uptime | sed 's/.*up \+\([^,]*\), .*/\1/')
shell="$SHELL"
terminal="$TERM ${TERM_PROGRAM//_/ }"
cpu=$(sysctl -n machdep.cpu.brand_string)
battery=$(ioreg -l | grep -i capacity | tr '\n' ' | ' | awk '{printf("%.2f%%", $10/$5 * 100)}')

# removes (R) and (TM) from the CPU name so it fits in a standard 80 window
cpu=$(echo "$cpu" | awk '$1=$1' | sed 's/([A-Z]\{1,2\})//g')

ram="$(( $(sysctl -n hw.memsize) / 1024 ** 3  )) GB"
disk=$(df | head -2 | tail -1 | awk '{print $5}')


# Set up colors if:
# * stdout is a tty
# * the user hasn't turned it off
# * or if we're forcing color
if [[ ( -t 1  && "${opt_nocolor}" = f) || "${opt_force_color}" = t ]]
then
  BLUE=$(tput      setaf 4 2>/dev/null)
  textColor=$(tput setaf 6 2>/dev/null)
  normal=$(tput    sgr0 2>/dev/null)
fi

case "${packager}" in
  homebrew)
    packagehandler=$(brew list -1 | wc -l | awk '{print $1 }')
    ;;
  macports)
    hash port 2>/dev/null || { echo >&2 "This option requires MapPorts, and you don't seem to have it."; exit 1; }
    packagehandler=$(port installed | wc -l | awk '{print $1 }')
    ;;
  *)
    packagehandler=0
    ;;
esac

userText="${textColor}User:${normal}"
hostnameText="${textColor}Hostname:${normal}"
distroText="${textColor}Distro:${normal}"
kernelText="${textColor}Kernel:${normal}"
uptimeText="${textColor}Uptime:${normal}"
ipText="${textColor}IP Address:${normal}"
shellText="${textColor}Shell:${normal}"
terminalText="${textColor}Terminal:${normal}"
packagehandlerText="${textColor}Packages:${normal}"
cpuText="${textColor}CPU:${normal}"
memoryText="${textColor}Memory:${normal}"
diskText="${textColor}Disk:${normal}"
batteryText="${textColor}Battery:${normal}"

# The ${foo#  } is a cheat so that it lines up here as well
# as when run.
echo -e "

${BLUE#   }                                                         $userText $user
${BLUE#   }                                                         $hostnameText $hostname
${BLUE#   }                                                         $distroText $distro
${BLUE#   }   ##    ##  #######  ######## ########   #######        $kernelText $kernel
${BLUE#   }    ##  ##  ##     ##    ##    ##     ## ##     ##       $uptimeText $uptime
${BLUE#   }     ####   ##     ##    ##    ##     ## ##     ##       $shellText $shell
${BLUE#   }      ##    ##     ##    ##    ########  ##     ##       $terminalText $terminal
${BLUE#   }      ##    ##     ##    ##    ##        ##     ##       $packagehandlerText $packagehandler
${BLUE#   }      ##    ##     ##    ##    ##        ##     ##       $cpuText $cpu
${BLUE#   }      ##     #######     ##    ##         #######        $memoryText $ram
${BLUE#   }                                                         $diskText $disk
${BLUE#   }                                                         $batteryText $battery
${BLUE#   }                                                         $ipText $ip${normal}

"
